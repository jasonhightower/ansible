- name: Set pyenv home
  ansible.builtin.set_fact:
    pyenv_home: "{{ lookup('env', 'HOME') }}/.pyenv"
    pyenv_bin: "{{ lookup('env', 'HOME') }}/.pyenv/bin/pyenv"
  tags:
    - install
    - pyenv
    - python
    - jupyter
- name: Check if pyenv is installed
  stat:
    path: "{{ pyenv_home }}/"
  register: pyenv
  tags:
    - install
    - pyenv
    - python
    - jupyter
- name: Install pyenv dependencies
  ansible.builtin.apt:
    pkg:
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - curl
      - libncursesw5-dev
      - xz-utils
      - tk-dev
      - libxml2-dev
      - libxmlsec1-dev
      - libffi-dev
      - liblzma-dev
  tags:
    - install
    - pyenv
    - python
    - jupyter
  when: pyenv.stat.exists == False
- name: Fetch pyenv installer
  ansible.builtin.uri:
    url: https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer
    return_content: yes
  register: pyenv_installer
  tags:
    - install
    - pyenv
    - python
    - jupyter
  when: pyenv.stat.exists == False
- name: Run pyenv installer
  ansible.builtin.shell:
    cmd: bash
    stdin: "{{ pyenv_installer.content }}"
  tags:
    - install
    - pyenv
    - python
    - jupyter
  when: pyenv.stat.exists == False
- name:
  ansible.builtin.shell:
    cmd: eval "$({{ pyenv_bin }} init -)" && eval ($({{ pyenv_bin }} virtualenv-init -)"
  tags:
    - install
    - pyenv
    - python
    - jupyter
#- export PYENV_ROOT="$HOME/.pyenv"
#- command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
#- eval "$(pyenv init -)"
